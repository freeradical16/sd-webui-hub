name: build-base

on:
  push:
    branches: [ "main" ]                # build on main pushes
    paths:
      - "base/**"                       # only rebuild if base/ changes
      - ".github/workflows/build-base.yml"
    tags: [ "v*" ]                      # also build on version tags like v0.1.0
  workflow_dispatch:                    # allow manual trigger

permissions:
  contents: read
  packages: write                       # needed to push to GHCR

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Step 1. Checkout your repo code
      - name: Checkout
        uses: actions/checkout@v4

      # Step 2. Set up Docker Buildx (for advanced features, caching, multi-arch)
      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      # Step 3. Log in to GHCR using GitHubâ€™s built-in token
      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 4. Generate image tags and labels dynamically
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/sd-webui-hub
          tags: |
            # For main branch pushes
            type=raw,value=base-main,enable=${{ github.ref == 'refs/heads/main' }}
            # Always add commit-specific tag
            type=sha,format=short,prefix=base-sha-
            # For release tags (like v0.1.0)
            type=ref,event=tag,prefix=base-
            # Also add base-latest when it's a release tag
            type=raw,value=base-latest,enable=${{ startsWith(github.ref, 'refs/tags/v') }}

      # Step 5. Build and push the Docker image
      - name: Build & push base image
        uses: docker/build-push-action@v5
        with:
          context: ./base
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
